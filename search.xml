<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>BFC的理解与应用</title>
    <url>/posts/9722/</url>
    <content><![CDATA[<h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>先上MDN上对 BFC 的定义：</p>
<blockquote>
<p>块格式化上下文（Block Formatting Context，BFC） 是Web页面的可视化CSS渲染的一部分，是块盒子的布局过程发生的区域，也是浮动元素与其他元素交互的区域。</p>
</blockquote>
<p>———— <a href="https://developer.mozilla.org/zh-CN/docs/Web/Guide/CSS/Block_formatting_context">BFC | MDN</a></p>
<p>不知道别人看完这段定义有何感受，反正我是懵逼的。不过我在这儿还是建议各位认真阅读上面给出的MDN链接至少两遍，这能让你对一个陌生的概念有一个基本的认知。</p>
<a id="more"></a>

<h2 id="理解"><a href="#理解" class="headerlink" title="理解"></a>理解</h2><p>这里谈下我对BFC的理解：BFC其实是一个独立的，与外界隔离了的容器，容器里面的子元素不会影响到外面的元素，外面的也同样不会影响到容器内部的元素。我们可以利用这个特性，来解决一些布局上的问题。</p>
<h2 id="BFC触发条件"><a href="#BFC触发条件" class="headerlink" title="BFC触发条件"></a>BFC触发条件</h2><p>BFC的触发条件有很多，想要知道所有细节可以移步上面给出的 MDN 链接。这里我只列出一些常见触发条件：</p>
<ul>
<li>根元素（HTML元素）</li>
<li>浮动元素（float不为none）</li>
<li>绝对定位元素（position 为 absolute 或 fixed）</li>
<li>display 为 block, inline-block, flex, inline-flex, list-item, table</li>
<li>overflow 值不为 visible 的块元素</li>
</ul>
<h2 id="BFC布局特性"><a href="#BFC布局特性" class="headerlink" title="BFC布局特性"></a>BFC布局特性</h2><p>对于一个BFC容器来说：</p>
<ul>
<li>内部相邻的两个元素垂直方向上的 margin 会发生重叠</li>
<li>不会与外界的浮动元素产生交集，而是紧贴浮动元素的边缘</li>
<li>元素从容器的顶端开始垂直地一个接一个地排列</li>
<li>每一个元素的左外边缘（margin-left）会触碰到容器的左边缘（border-left）（如果设置了容器内部的元素从右到左的格式排布，则触碰的是右边缘）</li>
<li>在计算它的高度时，还会检测内部浮动或者定位元素的高度</li>
</ul>
<h2 id="实际应用"><a href="#实际应用" class="headerlink" title="实际应用"></a>实际应用</h2><h3 id="清除浮动"><a href="#清除浮动" class="headerlink" title="清除浮动"></a>清除浮动</h3><p>利用BFC “在计算它的高度时，还会检测内部浮动或者定位元素的高度” 这条特性，我们可以触发父元素的BFC来清除子元素浮动带来的影响。常见的用法是给父元素设置 <code>overflow: hidden</code> 样式（如果考虑IE6版本，还需设置 <code>zoom: 1</code>，因为IE6不支持 <code>overflow: hidden</code> 来清除浮动）：</p>
<iframe height="265" scrolling="no" title="利用BFC清除浮动" src="https://codepen.io/JingW/embed/BbxEGP/?height=265&amp;theme-id=0&amp;default-tab=css,result" frameborder="no" allowtransparency="true" allowfullscreen="true" style="width: 997.594px;"></iframe>

<h3 id="解决外边距合并问题"><a href="#解决外边距合并问题" class="headerlink" title="解决外边距合并问题"></a>解决外边距合并问题</h3><p>如果看上面标题不知道在说什么，请很戳<a href="http://www.w3school.com.cn/css/css_margin_collapsing.asp">这里</a>了解详情。由于属于同一个BFC的两个相邻盒子的垂直margin会发生重叠，那么我们可以隔离开这两个元素，让它们不属于同一个BFC，这样就不会发生margin重叠了。</p>
<iframe height="265" scrolling="no" title="解决外边距合并问题" src="https://codepen.io/JingW/embed/YgLbzY/?height=265&amp;theme-id=0&amp;default-tab=css,result" frameborder="no" allowtransparency="true" allowfullscreen="true" style="width: 997.594px;"></iframe>

<h3 id="两栏布局，右边宽度自适应"><a href="#两栏布局，右边宽度自适应" class="headerlink" title="两栏布局，右边宽度自适应"></a>两栏布局，右边宽度自适应</h3><p>我们常常在开发中有这样类似的需求：两栏布局，左边定宽，右边自适应。<br>这时我们就可以利用BFC特性来实现需求：左边设置定宽+左浮动；右边给自己加上 <code>overflow: hidden</code> 。<br>原理就是：给元素设置BFC后，为了和浮动元素不产生任何交集，它会顺着浮动元素的边缘形成自己的封闭上下文。直接上代码看效果：</p>
<iframe height="265" scrolling="no" title="利用BFC实现两栏布局" src="https://codepen.io/JingW/embed/MxGdEe/?height=265&amp;theme-id=0&amp;default-tab=html,result" frameborder="no" allowtransparency="true" allowfullscreen="true" style="width: 997.594px;"></iframe>

<p>以上是我对BFC的一些理解以及实际应用，希望能够帮助大家了解BFC这个听起来摸不着头脑的东西。</p>
]]></content>
      <categories>
        <category>前端</category>
        <category>CSS</category>
      </categories>
      <tags>
        <tag>布局</tag>
        <tag>技巧</tag>
      </tags>
  </entry>
  <entry>
    <title>三栏布局方案(圣杯_双飞翼)</title>
    <url>/posts/10370/</url>
    <content><![CDATA[<h2 id="圣杯布局"><a href="#圣杯布局" class="headerlink" title="圣杯布局"></a>圣杯布局</h2><h3 id="步骤一-HTML框架搭建-amp-初始化CSS"><a href="#步骤一-HTML框架搭建-amp-初始化CSS" class="headerlink" title="步骤一 - HTML框架搭建 &amp; 初始化CSS"></a>步骤一 - HTML框架搭建 &amp; 初始化CSS</h3><p>首先把基本框架搭起来（注意中间部分放最前面）：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;center&quot;</span>&gt;</span>我是中间<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;left&quot;</span>&gt;</span>我是左边<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;right&quot;</span>&gt;</span>我是右边<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<a id="more"></a>

<p>接下来是初始化样式。left, right宽度分别设置为100px和200px；然后设置container的 <code>padding-left: 100px</code> + <code>padding-right: 200px</code> 来占据两侧填充；center宽度设为100%，这样能够自适应剩下的宽度。再让所有子元素左浮动。代码如下：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.container</span> &#123;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">200px</span> <span class="number">0</span> <span class="number">100px</span>; <span class="comment">/* 左边100， 右边200*/</span></span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#e1e1e1</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">300px</span>; <span class="comment">/* 为了看效果，给个300px把高度撑起来 */</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.left</span>, <span class="selector-class">.center</span>, <span class="selector-class">.right</span> &#123;</span><br><span class="line">    <span class="attribute">float</span>: left;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.center</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>; <span class="comment">/* 占据父元素剩下的宽度*/</span></span><br><span class="line">    <span class="attribute">background-color</span>: lightblue;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.left</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: pink;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.right</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: yellow;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>此时的页面效果：</p>
<img src="/posts/undefined/%E5%9C%A3%E6%9D%AFstep1.png" class="" title="圣杯step1">

<h3 id="步骤二-让left占据最左列"><a href="#步骤二-让left占据最左列" class="headerlink" title="步骤二 - 让left占据最左列"></a>步骤二 - 让left占据最左列</h3><p>为了让left能越过center，我们先给它设置一个 -100% 的左边距。这个100%是在container中的宽度，也就是center的宽度：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.left</span> &#123;</span><br><span class="line">    <span class="attribute">margin-left</span>: -<span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="comment">/*为了看left和center的重叠效果，暂时bgc设为半透明*/</span></span><br><span class="line">    <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">255</span>,<span class="number">204</span>,<span class="number">204</span>,.<span class="number">6</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>页面效果：</p>
<img src="/posts/undefined/%E5%9C%A3%E6%9D%AFstep2.png" class="" title="圣杯step2">

<p>此时，我们已经让left从“第二行”升到了“第一行”，为了让它靠到最左侧，不与center重叠，可以给它设置相对定位，然后给个 <code>left: -100px</code> ，让它定位到container最左侧：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.left</span> &#123;</span><br><span class="line">    <span class="comment">/* 设置相对定位 */</span> </span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">    <span class="comment">/* 靠到最左侧 */</span></span><br><span class="line">    <span class="attribute">left</span>: -<span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">margin-left</span>: -<span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: pink;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>页面效果：</p>
<img src="/posts/undefined/%E5%9C%A3%E6%9D%AFstep3.png" class="" title="圣杯step3">

<h3 id="步骤三-让right占据最右列"><a href="#步骤三-让right占据最右列" class="headerlink" title="步骤三 - 让right占据最右列"></a>步骤三 - 让right占据最右列</h3><p>定位好了left，也是时候让right呆在最右边来填充位置了，我们继续使用负margin：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.right</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">margin-right</span>: -<span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: yellow;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>页面效果：</p>
<img src="/posts/undefined/%E5%9C%A3%E6%9D%AFstep4.png" class="" title="圣杯step4">

<h3 id="步骤四-给container设置min-width"><a href="#步骤四-给container设置min-width" class="headerlink" title="步骤四 - 给container设置min-width"></a>步骤四 - 给container设置min-width</h3><p>看起来已经实现了不是吗？但我们还差最后一步，给container设置一个 <code>min-width: 100px</code> （就是左列的宽度），否则当浏览器缩小到一定程度时，这个布局可能会被破坏。原因简单来讲就是：“由于设置了相对定位，所以当left原来的位置和right的位置产生重叠时，由于浮动的原因一行放不下就会换行”。所以布局就被打乱了。</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.container</span> &#123;</span><br><span class="line">    <span class="attribute">min-width</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#e1e1e1</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span> <span class="number">200px</span> <span class="number">0</span> <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">300px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="完整代码-最终效果"><a href="#完整代码-最终效果" class="headerlink" title="完整代码 + 最终效果"></a>完整代码 + 最终效果</h3><p>这样，我们就实现了圣杯布局，完整代码和效果见下：</p>
<iframe height="265" scrolling="no" title="三栏布局 - 圣杯布局" src="https://codepen.io/JingW/embed/VRXYmz/?height=265&amp;theme-id=0&amp;default-tab=css,result" frameborder="no" allowtransparency="true" allowfullscreen="true" style="width: 997.594px;"></iframe>

<h2 id="双飞翼布局"><a href="#双飞翼布局" class="headerlink" title="双飞翼布局"></a>双飞翼布局</h2><p>如果上面圣杯布局你已经理解并自己实践了一遍，那么这里的双飞翼布局你也应该不再话下。跟着我一起撸一遍代码吧。</p>
<h3 id="步骤一-HTML框架搭建-amp-初始化CSS-1"><a href="#步骤一-HTML框架搭建-amp-初始化CSS-1" class="headerlink" title="步骤一 - HTML框架搭建 &amp; 初始化CSS"></a>步骤一 - HTML框架搭建 &amp; 初始化CSS</h3><p>首先搭建html，仔细观察下方代码你会发现，双飞翼布局在html上面有一点和圣杯布局有差别，那就是双飞翼在center里又套了一个div。到后面你就会知道这样设置的目的。</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;center&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">div</span>&gt;</span>我是中间<span class="tag">&lt;/<span class="name">div</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;left&quot;</span>&gt;</span>我是左边<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;right&quot;</span>&gt;</span>我是右边<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>

<p>然后编写初始样式。left定宽100；right定宽200；left, right, center全部设置左浮动。其他例如设置颜色高度等等直接看下方代码：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.container</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#e1e1e1</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">300px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.center</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: lightblue;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.left</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: pink;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.right</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: yellow;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.left</span>, <span class="selector-class">.center</span>, <span class="selector-class">.right</span> &#123;</span><br><span class="line">    <span class="attribute">float</span>: left;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>效果如下：</p>
<img src="/posts/undefined/%E5%8F%8C%E9%A3%9E%E7%BF%BCstep1.png" class="" title="双飞翼step1">

<h3 id="步骤二-设置center为100-宽"><a href="#步骤二-设置center为100-宽" class="headerlink" title="步骤二 - 设置center为100%宽"></a>步骤二 - 设置center为100%宽</h3><p>将center的宽度设为100%，这样会把left，right“挤”到第二行：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.center</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: lightblue;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>效果如下：</p>
<img src="/posts/undefined/%E5%8F%8C%E9%A3%9E%E7%BF%BCstep2.png" class="" title="双飞翼step2">

<h3 id="步骤三-分别让left-right回到最左边和最右边"><a href="#步骤三-分别让left-right回到最左边和最右边" class="headerlink" title="步骤三 - 分别让left,right回到最左边和最右边"></a>步骤三 - 分别让left,right回到最左边和最右边</h3><p>接着，给left设置 <code>margin-left: -100%</code> 回到最左边，给right设置 <code>margin-left: -200px</code> 回到最右边。此时center和left,right都有重叠区域，为了看效果，设置了半透明背景颜色。</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.left</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">    <span class="attribute">margin-left</span>: -<span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: pink;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.right</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">margin-left</span>: -<span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: yellow;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>效果如下：</p>
<img src="/posts/undefined/%E5%8F%8C%E9%A3%9E%E7%BF%BCstep3.png" class="" title="双飞翼step3">

<h3 id="步骤四-给center的子div设置左右margin"><a href="#步骤四-给center的子div设置左右margin" class="headerlink" title="步骤四 - 给center的子div设置左右margin"></a>步骤四 - 给center的子div设置左右margin</h3><p>其实上面的效果图已经实现了三栏布局中间自适应。但有个问题是center左右部分区域会被遮挡，这个时候在步骤一提到的center子div的作用就体现出来了，我们可以给它设置一个左右的margin值，分别等于left的宽和right的宽，消除掉重叠的副作用。</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.center</span> <span class="selector-tag">div</span> &#123;</span><br><span class="line">    <span class="comment">/* 左margin100，右margin200 */</span></span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span> <span class="number">200px</span> <span class="number">0</span> <span class="number">100px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>效果如下：</p>
<img src="/posts/undefined/%E5%8F%8C%E9%A3%9E%E7%BF%BCstep4.png" class="" title="双飞翼step4">

<h3 id="步骤五-给container设置min-width"><a href="#步骤五-给container设置min-width" class="headerlink" title="步骤五 - 给container设置min-width"></a>步骤五 - 给container设置min-width</h3><p>最后，给container设置一个min-width，让container最小宽度不小于left宽+right宽</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.container</span> &#123;</span><br><span class="line">    <span class="attribute">min-width</span>: <span class="number">300px</span>;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#e1e1e1</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">300px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>大功告成~</p>
<h3 id="完整代码-最终效果-1"><a href="#完整代码-最终效果-1" class="headerlink" title="完整代码 + 最终效果"></a>完整代码 + 最终效果</h3><iframe height="265" scrolling="no" title="三栏布局 - 双飞翼布局" src="https://codepen.io/JingW/embed/wOmBoY/?height=265&amp;theme-id=0&amp;default-tab=css,result" frameborder="no" allowtransparency="true" allowfullscreen="true" style="width: 997.594px;"></iframe>
]]></content>
      <categories>
        <category>前端</category>
        <category>CSS</category>
      </categories>
      <tags>
        <tag>布局</tag>
        <tag>技巧</tag>
      </tags>
  </entry>
  <entry>
    <title>两栏布局方案汇总</title>
    <url>/posts/44541/</url>
    <content><![CDATA[<p>记录下常见的两栏布局方式。</p>
<h2 id="左边定宽，右边自适应"><a href="#左边定宽，右边自适应" class="headerlink" title="左边定宽，右边自适应"></a>左边定宽，右边自适应</h2><h3 id="模拟table"><a href="#模拟table" class="headerlink" title="模拟table"></a>模拟table</h3><p>父元素 <code>display: table</code> ，子元素左右 <code>table-cell</code> ，左边定宽。</p>
<iframe height="460" scrolling="no" title="两栏布局（左定右自适应）模拟table" src="https://codepen.io/JingW/embed/zbWYMO/?height=265&amp;theme-id=0&amp;default-tab=css,result" frameborder="no" allowtransparency="true" allowfullscreen="true" style="width: 997.594px;"></iframe>

<a id="more"></a>

<h3 id="左浮-右Margin"><a href="#左浮-右Margin" class="headerlink" title="左浮 + 右Margin"></a>左浮 + 右Margin</h3><p>子元素的左边浮动脱标，右边设置 <code>margin-left: 左边元素宽度</code></p>
<iframe height="460" scrolling="no" title="两栏布局（左定右自适应）子元素绝对定位" src="https://codepen.io/JingW/embed/bZvGRY/?height=265&amp;theme-id=0&amp;default-tab=css,result" frameborder="no" allowtransparency="true" allowfullscreen="true" style="width: 997.594px;"></iframe>

<h3 id="左浮-右BFC"><a href="#左浮-右BFC" class="headerlink" title="左浮 + 右BFC"></a>左浮 + 右BFC</h3><p>子元素左边设置浮动+定宽，右边子元素设置 <code>overflow: hidden</code> 触发自身BFC</p>
<iframe height="460" scrolling="no" title="两栏布局（左定右自适应）左浮 + 右BFC" src="https://codepen.io/JingW/embed/rRdNYR/?height=265&amp;theme-id=0&amp;default-tab=css,result" frameborder="no" allowtransparency="true" allowfullscreen="true" style="width: 997.594px;"></iframe>

<h3 id="子绝父相"><a href="#子绝父相" class="headerlink" title="子绝父相"></a>子绝父相</h3><p>子绝父相，左边 <code>top, left: 0</code>，右边 <code>top, right: 0</code>，left等于左边宽度。</p>
<iframe height="460" scrolling="no" title="两栏布局（左定右自适应）子绝父相" src="https://codepen.io/JingW/embed/gEeONo/?height=265&amp;theme-id=0&amp;default-tab=css,result" frameborder="no" allowtransparency="true" allowfullscreen="true" style="width: 997.594px;"></iframe>

<h3 id="flex布局"><a href="#flex布局" class="headerlink" title="flex布局"></a>flex布局</h3><p>父元素 <code>display: flex</code> ，左边定宽，右边 <code>flex: 1</code>。</p>
<iframe height="460" scrolling="no" title="两栏布局（左定右自适应）flex" src="https://codepen.io/JingW/embed/bZvNGx/?height=265&amp;theme-id=0&amp;default-tab=css,result" frameborder="no" allowtransparency="true" allowfullscreen="true" style="width: 997.594px;"></iframe>
]]></content>
      <categories>
        <category>前端</category>
        <category>CSS</category>
      </categories>
      <tags>
        <tag>布局</tag>
        <tag>技巧</tag>
      </tags>
  </entry>
  <entry>
    <title>使用Jekyll搭建GitHubPages博客</title>
    <url>/posts/63074/</url>
    <content><![CDATA[<h2 id="安装-Jekyll"><a href="#安装-Jekyll" class="headerlink" title="安装 Jekyll"></a>安装 Jekyll</h2><p>来源：<a href="https://jekyllrb.com/docs/installation/">https://jekyllrb.com/docs/installation/</a></p>
<h3 id="macOS"><a href="#macOS" class="headerlink" title="macOS"></a>macOS</h3><p>终端运行：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">xcode-select --install</span><br></pre></td></tr></table></figure>

<p>安装 Ruby：</p>
<p>Jekyll 依赖 Ruby v2.5.0+，如果你的 macOS 版本为 Catalina 10.15 或以上，则不需要再手动安装，因为系统自带 Ruby 2.6.3 。</p>
<a id="more"></a>

<blockquote>
<p>查看本地 Ruby 版本：<code>ruby -v</code></p>
<p>如果你的版本低于 10.15 则需要下载或更新你的 Ruby</p>
<p>具体下载or更新方案可查看：<a href="https://jekyllrb.com/docs/installation/macos/#install-ruby">https://jekyllrb.com/docs/installation/macos/#install-ruby</a></p>
</blockquote>
<p>安装 Jekyll：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">gem install --user-install bundler jekyll</span><br></pre></td></tr></table></figure>

<p>选择你要安装博客的目录下运行：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">jekyll new 你博客名(随意，反正最后要全部移动到你的githubpages repo下)</span><br></pre></td></tr></table></figure>

<h3 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h3><p>windows安装不再赘述，可查看官网文档安装：<a href="https://jekyllrb.com/docs/installation/windows/">https://jekyllrb.com/docs/installation/windows/</a></p>
<h2 id="安装-minimal-mistakes-jekyll-主题"><a href="#安装-minimal-mistakes-jekyll-主题" class="headerlink" title="安装 minimal-mistakes-jekyll 主题"></a>安装 minimal-mistakes-jekyll 主题</h2><p>github 链接：<a href="https://github.com/mmistakes/minimal-mistakes">https://github.com/mmistakes/minimal-mistakes</a></p>
<h3 id="编辑-Gemfile"><a href="#编辑-Gemfile" class="headerlink" title="编辑 Gemfile"></a>编辑 Gemfile</h3><p>替换你的 <code>Gemfile</code> 文件：</p>
<figure class="highlight"><table><tr><td class="code"><pre><span class="line">source &quot;https://rubygems.org&quot;</span><br><span class="line"></span><br><span class="line"># Hello! This is where you manage which Jekyll version is used to run.</span><br><span class="line"># When you want to use a different version, change it below, save the</span><br><span class="line"># file and run `bundle install`. Run Jekyll with `bundle exec`, like so:</span><br><span class="line">#</span><br><span class="line">#     bundle exec jekyll serve</span><br><span class="line">#</span><br><span class="line"># This will help ensure the proper Jekyll version is running.</span><br><span class="line"># Happy Jekylling!</span><br><span class="line"></span><br><span class="line"># gem &quot;github-pages&quot;, group: :jekyll_plugins</span><br><span class="line"></span><br><span class="line"># To upgrade, run `bundle update`.</span><br><span class="line"></span><br><span class="line">gem &quot;github-pages&quot;, group: :jekyll_plugins</span><br><span class="line">gem &quot;minimal-mistakes-jekyll&quot;, :github =&gt; &quot;mmistakes/minimal-mistakes&quot;</span><br><span class="line"></span><br><span class="line"># The following plugins are automatically loaded by the theme-gem:</span><br><span class="line">#   gem &quot;jekyll-paginate&quot;</span><br><span class="line">#   gem &quot;jekyll-sitemap&quot;</span><br><span class="line">#   gem &quot;jekyll-gist&quot;</span><br><span class="line">#   gem &quot;jekyll-feed&quot;</span><br><span class="line">#   gem &quot;jekyll-include-cache&quot;</span><br><span class="line">#</span><br><span class="line"># If you have any other plugins, put them here!</span><br><span class="line">group :jekyll_plugins do</span><br><span class="line">end</span><br></pre></td></tr></table></figure>

<p>运行 <code>bundle install</code> 安装依赖。</p>
<h3 id="配置-config-yml"><a href="#配置-config-yml" class="headerlink" title="配置 _config.yml"></a>配置 _config.yml</h3><p>找到 <code>_config.yml</code> 文件并替换：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> Welcome to Jekyll!</span></span><br><span class="line"><span class="meta">#</span></span><br><span class="line"><span class="bash"><span class="comment"># This config file is meant for settings that affect your whole blog, values</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> <span class="built_in">which</span> you are expected to <span class="built_in">set</span> up once and rarely edit after that. If you find</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> yourself editing this file very often, consider using Jekyll<span class="string">&#x27;s data files</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> feature <span class="keyword">for</span> the data you need to update frequently.</span></span><br><span class="line"><span class="meta">#</span></span><br><span class="line"><span class="bash"><span class="comment"># For technical reasons, this file is *NOT* reloaded automatically when you use</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> <span class="string">&#x27;bundle exec jekyll serve&#x27;</span>. If you change this file, please restart the server process.</span></span><br><span class="line"><span class="meta">#</span></span><br><span class="line"><span class="bash"><span class="comment"># If you need help with YAML syntax, here are some quick references for you:</span></span> </span><br><span class="line"><span class="meta">#</span><span class="bash"> https://learn-the-web.algonquindesign.ca/topics/markdown-yaml-cheat-sheet/<span class="comment">#yaml</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> https://learnxinyminutes.com/docs/yaml/</span></span><br><span class="line"><span class="meta">#</span></span><br><span class="line"><span class="bash"><span class="comment"># Site settings</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> These are used to personalize your new site. If you look <span class="keyword">in</span> the HTML files,</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> you will see them accessed via &#123;&#123; site.title &#125;&#125;, &#123;&#123; site.email &#125;&#125;, and so on.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> You can create any custom variable you would like, and they will be accessible</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> <span class="keyword">in</span> the templates via &#123;&#123; site.myvariable &#125;&#125;.</span></span><br><span class="line"></span><br><span class="line">title: Your awesome title</span><br><span class="line">email: your-email@example.com</span><br><span class="line">description: &gt;- # this means to ignore newlines until &quot;baseurl:&quot;</span><br><span class="line">  Write an awesome description for your new site here. You can edit this</span><br><span class="line">  line in _config.yml. It will appear in your document head meta (for</span><br><span class="line">  Google search results) and in your feed.xml site description.</span><br><span class="line">baseurl: &quot;&quot; # the subpath of your site, e.g. /blog</span><br><span class="line">url: &quot;https://evestorm.github.io&quot; # the base hostname &amp; protocol for your site, e.g. http://example.com</span><br><span class="line">repository: &quot;&#123;github_username&#125;/&#123;github_username&#125;.github.io&quot; # 把 &#123;github_username&#125; 替换成你github的username</span><br><span class="line">twitter_username: jekyllrb</span><br><span class="line">github_username:  lance # 你的username，随便填</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Build settings</span></span><br><span class="line">theme: minimal-mistakes-jekyll</span><br><span class="line">plugins:</span><br><span class="line">  - jekyll-feed</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> Exclude from processing.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> The following items will not be processed, by default.</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> Any item listed under the `exclude:` key here will be automatically added to</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> the internal <span class="string">&quot;default list&quot;</span>.</span></span><br><span class="line"><span class="meta">#</span></span><br><span class="line"><span class="bash"><span class="comment"># Excluded items can be processed by explicitly listing the directories or</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash"> their entries<span class="string">&#x27; file path in the `include:` list.</span></span></span><br><span class="line"><span class="meta">#</span></span><br><span class="line"><span class="bash"><span class="comment"># exclude:</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash">   - .sass-cache/</span></span><br><span class="line"><span class="meta">#</span><span class="bash">   - .jekyll-cache/</span></span><br><span class="line"><span class="meta">#</span><span class="bash">   - gemfiles/</span></span><br><span class="line"><span class="meta">#</span><span class="bash">   - Gemfile</span></span><br><span class="line"><span class="meta">#</span><span class="bash">   - Gemfile.lock</span></span><br><span class="line"><span class="meta">#</span><span class="bash">   - node_modules/</span></span><br><span class="line"><span class="meta">#</span><span class="bash">   - vendor/bundle/</span></span><br><span class="line"><span class="meta">#</span><span class="bash">   - vendor/cache/</span></span><br><span class="line"><span class="meta">#</span><span class="bash">   - vendor/gems/</span></span><br><span class="line"><span class="meta">#</span><span class="bash">   - vendor/ruby/</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>然后执行 <code>bundle update</code>。</p>
<h3 id="替换和更改"><a href="#替换和更改" class="headerlink" title="替换和更改"></a>替换和更改</h3><ul>
<li><p>替换根目录下 <code>index.markdown</code> 为 <code>index.html</code>  ：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">layout: home</span><br><span class="line">author_profile: true</span><br><span class="line">---</span><br></pre></td></tr></table></figure>
</li>
<li><p>找到 <code>_posts/0000-00-00-welcome-to-jekyll.md</code> 并替换 <code>layout: single</code></p>
</li>
<li><p>删除 <code>about.md</code> 文件</p>
</li>
</ul>
<p>最后执行： <code>bundle exec jekyll serve</code> 本地运行博客。</p>
]]></content>
      <categories>
        <category>教程</category>
        <category>博客</category>
      </categories>
      <tags>
        <tag>Jekyll</tag>
      </tags>
  </entry>
  <entry>
    <title>使用hexo搭建个人博客</title>
    <url>/posts/43303/</url>
    <content><![CDATA[<h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>利用 <a href="https://hexo.io/zh-cn/">Hexo</a> 在 <a href="https://baike.baidu.com/item/github/10145341?fr=aladdin">GitHub</a> 上搭建个人博客。</p>
<h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><p>你的电脑需要安装下面两个应用程序：</p>
<ul>
<li>NodeJS <a href="http://www.runoob.com/nodejs/nodejs-install-setup.html">如何安装</a></li>
<li>Git <a href="http://www.runoob.com/git/git-install-setup.html">如何安装</a></li>
</ul>
<p>或者直接查看hexo的<a href="https://hexo.io/zh-cn/docs/#%E5%AE%89%E8%A3%85%E5%89%8D%E6%8F%90">官方文档</a>查看安装教程。</p>
<a id="more"></a>

<h2 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h2><blockquote>
<p><a href="https://hexo.io/zh-cn/docs/">安装文档</a></p>
</blockquote>
<p>终端全局安装：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">npm install -g hexo-cli</span><br></pre></td></tr></table></figure>

<h3 id="建站"><a href="#建站" class="headerlink" title="建站"></a>建站</h3><p>安装 Hexo 完成后，请执行下列命令，Hexo 将会在指定文件夹中新建所需要的文件：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo init 你的站点文件夹</span><br><span class="line">cd 你的站点文件夹</span><br><span class="line">npm install</span><br></pre></td></tr></table></figure>

<h3 id="命令执行"><a href="#命令执行" class="headerlink" title="命令执行"></a>命令执行</h3><p>下方是三个常见命令，可以先执行前俩看看效果，最后一个部署命令待会再执行。</p>
<ul>
<li><code>hexo server -p 5000</code> 本地启动服务器，5000端口</li>
<li><code>hexo new &#39;你想要创建的文章名称&#39;</code> 创建文章</li>
<li><code>hexo clean &amp;&amp; hexo deploy</code> 部署网站</li>
</ul>
<h3 id="使用第三方主题"><a href="#使用第三方主题" class="headerlink" title="使用第三方主题"></a>使用第三方主题</h3><ul>
<li><a href="https://github.com/iissnan/hexo-theme-next">Next</a> 【推荐】</li>
<li><a href="https://github.com/litten/hexo-theme-yilia">Yilia</a></li>
</ul>
<h4 id="安装Next主题"><a href="#安装Next主题" class="headerlink" title="安装Next主题"></a>安装Next主题</h4><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd 你的站点目录</span><br><span class="line">git clone https://github.com/next-theme/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure>

<h2 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h2><h3 id="创建分类和标签"><a href="#创建分类和标签" class="headerlink" title="创建分类和标签"></a>创建分类和标签</h3><h4 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h4><p>运行：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo new page &quot;categories&quot;</span><br></pre></td></tr></table></figure>

<p>p.s. 命名为 <code>categories</code> 原因是 <code>categories</code> 在next主题中是一个关键词对应着分类。</p>
<p>在主站根目录下,也就是你hexo的目录下找到 <code>/source/categories/index.md</code>，打开后的效果类似下方代码：</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: categories  #本页标题</span><br><span class="line">date: 2018-03-13 23:02:50  #创建日期</span><br><span class="line">type: &quot;categories&quot; 	#分类属于</span><br><span class="line">comments: false  #如果有启用多说 或者 Disqus评论，默认页面也会带有评论。需要关闭的话，请添加字段 comments 并将值设置为 false</span><br><span class="line">---</span><br></pre></td></tr></table></figure>

<p>接着在 themes 主题文件夹下找到 next 文件夹，修改 _config.yml 文件：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">menu:</span></span><br><span class="line">  <span class="attr">home:</span> <span class="string">/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-home</span></span><br><span class="line">  <span class="attr">about:</span> <span class="string">/about/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-user</span></span><br><span class="line">  <span class="attr">tags:</span> <span class="string">/tags/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-tags</span></span><br><span class="line">  <span class="attr">categories:</span> <span class="string">/categories/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-th</span></span><br><span class="line">  <span class="attr">archives:</span> <span class="string">/archives/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-archive</span></span><br></pre></td></tr></table></figure>

<p>然后在命令行输入添加文章命令：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo new &#39;你想要创建的文章名称&#39;</span><br></pre></td></tr></table></figure>

<p>根目录(主站目录下)/source/_posts/&lt;刚创建的文章名称&gt;.md，双击打开：</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: 文章标题</span><br><span class="line">date: 2018-03-13 23:13:23</span><br><span class="line">tags: html    #属于哪个标签</span><br><span class="line">categories: interview   #属于哪个分类</span><br><span class="line">---</span><br></pre></td></tr></table></figure>

<h4 id="标签"><a href="#标签" class="headerlink" title="标签"></a>标签</h4><p>打开命令行，进入博客所在文件夹。执行命令：</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">hexo new page tags</span><br></pre></td></tr></table></figure>

<p>成功后会有一个路径提示</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">INFO Created: ~/Documents/blog/source/tags/index.md</span><br></pre></td></tr></table></figure>

<p>找到对应的文件打开</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: tags</span><br><span class="line">date: 2018-03-14 00:02:05</span><br><span class="line">---</span><br></pre></td></tr></table></figure>

<p>添加type: “tags”到内容中，添加后是这样的：</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: 标签</span><br><span class="line">date: 2018-03-14 00:03:52</span><br><span class="line">type: &#x27;tags&#x27;</span><br><span class="line">comments: false</span><br><span class="line">---</span><br></pre></td></tr></table></figure>

<p>打开你的文章页面：</p>
<figure class="highlight markdown"><table><tr><td class="code"><pre><span class="line">---</span><br><span class="line">title: jQuery对表单的操作及更多应用</span><br><span class="line">date: 2019-03-14 00:03:55</span><br><span class="line">categories: 前端</span><br><span class="line">tags: jQuery  #如果想要多个标签可以 tags: [jQuery, 表格, 表单验证] or</span><br><span class="line"><span class="bullet">-</span> jQuery</span><br><span class="line"><span class="bullet">-</span> 表格</span><br><span class="line"><span class="bullet">-</span> 表单验证</span><br><span class="line">---</span><br></pre></td></tr></table></figure>

<p>p.s. 如果想要实现父子分类，也和标签一样的格式：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">categories:</span><br><span class="line">- IDE</span><br><span class="line">- VSCode</span><br></pre></td></tr></table></figure>

<p>参考：<a href="https://hexo.io/zh-cn/docs/front-matter.html#%E5%88%86%E7%B1%BB%E5%92%8C%E6%A0%87%E7%AD%BE">分类和标签</a></p>
<h3 id="头像设置"><a href="#头像设置" class="headerlink" title="头像设置"></a>头像设置</h3><p>把头像放在站点根目录的 <code>source/uploads/</code> 下，然后在 <code>theme/next/_config.yml</code> 下修改配置：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">avatar:</span></span><br><span class="line">  <span class="attr">url:</span> <span class="string">/uploads/avatar.png</span></span><br></pre></td></tr></table></figure>

<h3 id="侧边栏"><a href="#侧边栏" class="headerlink" title="侧边栏"></a>侧边栏</h3><h4 id="菜单"><a href="#菜单" class="headerlink" title="菜单"></a>菜单</h4><p>在 <code>theme/next/_config.yml</code> 下配置：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">menu:</span></span><br><span class="line">  <span class="attr">home:</span> <span class="string">/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-home</span></span><br><span class="line">  <span class="comment">#about: /about/ || fa fa-user</span></span><br><span class="line">  <span class="comment">#tags: /tags/ || fa fa-tags</span></span><br><span class="line">  <span class="comment">#categories: /categories/ || fa fa-th</span></span><br><span class="line">  <span class="attr">archives:</span> <span class="string">/archives/</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-archive</span></span><br><span class="line">  <span class="comment">#schedule: /schedule/ || fa fa-calendar</span></span><br><span class="line">  <span class="comment">#sitemap: /sitemap.xml || fa fa-sitemap</span></span><br><span class="line">  <span class="comment">#commonweal: /404/ || fa fa-heartbeat</span></span><br></pre></td></tr></table></figure>

<h4 id="社交"><a href="#社交" class="headerlink" title="社交"></a>社交</h4><figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">social:</span></span><br><span class="line">  <span class="attr">GitHub:</span> <span class="string">https://github.com/yourname</span> <span class="string">||</span> <span class="string">fab</span> <span class="string">fa-github</span></span><br><span class="line">  <span class="attr">E-Mail:</span> <span class="string">mailto:yourname@gmail.com</span> <span class="string">||</span> <span class="string">fa</span> <span class="string">fa-envelope</span></span><br><span class="line">  <span class="attr">Weibo:</span> <span class="string">https://weibo.com/yourname</span> <span class="string">||</span> <span class="string">fab</span> <span class="string">fa-weibo</span></span><br><span class="line">  <span class="attr">Google:</span> <span class="string">https://plus.google.com/yourname</span> <span class="string">||</span> <span class="string">fab</span> <span class="string">fa-google</span></span><br><span class="line">  <span class="attr">Twitter:</span> <span class="string">https://twitter.com/yourname</span> <span class="string">||</span> <span class="string">fab</span> <span class="string">fa-twitter</span></span><br><span class="line">  <span class="attr">FB Page:</span> <span class="string">https://www.facebook.com/yourname</span> <span class="string">||</span> <span class="string">fab</span> <span class="string">fa-facebook</span></span><br><span class="line">  <span class="attr">StackOverflow:</span> <span class="string">https://stackoverflow.com/yourname</span> <span class="string">||</span> <span class="string">fab</span> <span class="string">fa-stack-overflow</span></span><br><span class="line">  <span class="attr">YouTube:</span> <span class="string">https://youtube.com/yourname</span> <span class="string">||</span> <span class="string">fab</span> <span class="string">fa-youtube</span></span><br><span class="line">  <span class="attr">Instagram:</span> <span class="string">https://instagram.com/yourname</span> <span class="string">||</span> <span class="string">fab</span> <span class="string">fa-instagram</span></span><br><span class="line">  <span class="attr">Skype:</span> <span class="string">skype:yourname?call|chat</span> <span class="string">||</span> <span class="string">fab</span> <span class="string">fa-skype</span></span><br></pre></td></tr></table></figure>

<h3 id="阅读更多"><a href="#阅读更多" class="headerlink" title="阅读更多"></a>阅读更多</h3><p>在文章想要截断的地方添加 <code>&lt;!-- more --&gt;</code> ，这样在文章列表中就会只展示到截断位置为止。</p>
<h2 id="第三方插件"><a href="#第三方插件" class="headerlink" title="第三方插件"></a>第三方插件</h2><h3 id="永久URL生成：hexo-abbrlink"><a href="#永久URL生成：hexo-abbrlink" class="headerlink" title="永久URL生成：hexo-abbrlink"></a>永久URL生成：hexo-abbrlink</h3><ul>
<li>用来生成每篇博客永久URL链接的</li>
<li>Repo: <a href="https://github.com/rozbo/hexo-abbrlink">https://github.com/rozbo/hexo-abbrlink</a></li>
<li>执行： <code>npm install hexo-abbrlink --save</code></li>
</ul>
<h3 id="部署到GitHub：hexo-deployer-git"><a href="#部署到GitHub：hexo-deployer-git" class="headerlink" title="部署到GitHub：hexo-deployer-git"></a>部署到GitHub：hexo-deployer-git</h3><ul>
<li>将本地博客部署到GitHub</li>
<li>Repo: <a href="https://hexo.io/zh-cn/docs/one-command-deployment">https://hexo.io/zh-cn/docs/one-command-deployment</a>)</li>
<li>执行： <code>npm install hexo-deployer-git --save</code></li>
</ul>
<p><strong>如何部署</strong></p>
<p>在 <code>_config.yml</code> 下配置：</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">&quot;https://github.com/evestorm/evestorm.github.io&quot;</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">&quot;gh-pages&quot;</span></span><br></pre></td></tr></table></figure>

<p>然后在你的githubpages的repo下新建 <code>gh-pages</code> 分支，最后执行：<code>hexo clean &amp;&amp; hexo deploy</code> 即可部署。</p>
<h3 id="本地热更新：hexo-server"><a href="#本地热更新：hexo-server" class="headerlink" title="本地热更新：hexo-server"></a>本地热更新：hexo-server</h3><ul>
<li>服务器模块。在启动期间，Hexo 会监视文件变动并自动更新</li>
<li>Repo: <a href="https://github.com/hexojs/hexo-server">https://github.com/hexojs/hexo-server</a>)</li>
<li>执行： <code>npm install hexo-server –save</code></li>
</ul>
<h3 id="关键词搜索：LocalSearch"><a href="#关键词搜索：LocalSearch" class="headerlink" title="关键词搜索：LocalSearch"></a>关键词搜索：LocalSearch</h3><ul>
<li>本地搜索</li>
<li>Repo: <a href="https://github.com/theme-next/hexo-generator-searchdb">https://github.com/theme-next/hexo-generator-searchdb</a></li>
<li>执行：<code>npm install hexo-generator-searchdb --save</code></li>
</ul>
<p><strong>配置博客</strong></p>
<p>安装完成，编辑博客配置文件：<code>hexo/_config.yml</code></p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="attr">search:</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">search.xml</span></span><br><span class="line">  <span class="attr">field:</span> <span class="string">post</span></span><br><span class="line">  <span class="attr">content:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">format:</span> <span class="string">html</span></span><br></pre></td></tr></table></figure>

<p><strong>配置主题</strong></p>
<p>Next 主题自带搜索设置，编辑主题配置文件：<code>_config.yml</code></p>
<p>找到文件中 Local search 的相关配置，设为 <code>true</code></p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Local search</span></span><br><span class="line"><span class="comment"># Dependencies: https://github.com/next-theme/hexo-generator-searchdb</span></span><br><span class="line"><span class="attr">local_search:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="comment"># If auto, trigger search by changing input.</span></span><br><span class="line">  <span class="comment"># If manual, trigger search by pressing enter key or search button.</span></span><br><span class="line">  <span class="attr">trigger:</span> <span class="string">auto</span></span><br><span class="line">  <span class="comment"># Show top n results per article, show all results by setting to -1</span></span><br><span class="line">  <span class="attr">top_n_per_article:</span> <span class="number">1</span></span><br><span class="line">  <span class="comment"># Unescape html strings to the readable one.</span></span><br><span class="line">  <span class="attr">unescape:</span> <span class="literal">false</span></span><br><span class="line">  <span class="comment"># Preload the search data when the page loads.</span></span><br><span class="line">  <span class="attr">preload:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure>

<p>最后记得 hexo 重新部署。</p>
<h3 id="统计分析：busuanzi-count"><a href="#统计分析：busuanzi-count" class="headerlink" title="统计分析：busuanzi_count"></a>统计分析：busuanzi_count</h3><p>NexT 主题集成了不蒜子（busuanzi_count）统计功能，在 NexT 配置文件中找到关键词 <code>busuanzi_count:</code> ，把 enable 设置为 true</p>
<p>p.s. 除此之外，如果设置为true后仍然无效，且打开控制台显示js报错。有可能是不蒜子链接失效的原因，需要在Next主题配置文件位置：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">themes\next\layout\_third-party\analytics\busuanzi-counter.swig</span><br></pre></td></tr></table></figure>

<p>修改script链接为：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">copy&lt;script async src&#x3D;&quot;https:&#x2F;&#x2F;busuanzi.ibruce.info&#x2F;busuanzi&#x2F;2.3&#x2F;busuanzi.pure.mini.js&quot;&gt;&lt;&#x2F;script&gt;</span><br></pre></td></tr></table></figure>

<h3 id="评论功能：ChangYan"><a href="#评论功能：ChangYan" class="headerlink" title="评论功能：ChangYan"></a>评论功能：ChangYan</h3><p>文档地址：<a href="https://theme-next.js.org/docs/third-party-services/comments.html#Changyan-China">https://theme-next.js.org/docs/third-party-services/comments.html#Changyan-China</a></p>
<ul>
<li><p>注册登录：<a href="https://changyan.kuaizhan.com/">https://changyan.kuaizhan.com/</a></p>
</li>
<li><p>获取 APP ID 和 APP KEY</p>
</li>
<li><p>设置 changyan enable: true:</p>
<figure class="highlight yaml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># changyan</span></span><br><span class="line"><span class="attr">changyan:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">appid:</span></span><br><span class="line">  <span class="attr">appkey:</span></span><br></pre></td></tr></table></figure>



</li>
</ul>
<h3 id="常用配置"><a href="#常用配置" class="headerlink" title="常用配置"></a>常用配置</h3><p><a href="https://blog.csdn.net/lewky_liu/article/details/81277337">Hexo瞎折腾系列(4) - 站点首页不显示文章全文</a></p>
<h3 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">// npm全局安装Hexo</span><br><span class="line">npm install -g hexo-cli</span><br><span class="line"></span><br><span class="line">// 新建Hexo项目</span><br><span class="line">hexo init &lt;folder&gt;</span><br><span class="line">cd &lt;folder&gt;</span><br><span class="line">npm install</span><br><span class="line"></span><br><span class="line">// 新建文章</span><br><span class="line">hexo new &#x27;文章名&#x27;</span><br><span class="line"></span><br><span class="line">// 启动服务器</span><br><span class="line">hexo server -p 5000</span><br><span class="line"></span><br><span class="line">// 生成静态文件</span><br><span class="line">hexo generate --watch</span><br><span class="line"></span><br><span class="line">// 部署</span><br><span class="line">hexo clean &amp;&amp; hexo deploy</span><br></pre></td></tr></table></figure>

<h2 id="相关配置及资源"><a href="#相关配置及资源" class="headerlink" title="相关配置及资源"></a>相关配置及资源</h2><ul>
<li><a href="https://juejin.im/post/5bcd2d395188255c3b7dc1db#heading-42">Hexo+NexT 打造一个炫酷博客</a></li>
<li><a href="https://me.idealli.com/post/e8d13fc.html">这应该是最全的hexo博客搭建以及next美化教程</a></li>
<li><a href="https://leancloud.cn/">LeanCloud</a></li>
<li><a href="https://eirunye.github.io/2018/09/15/Hexo%E6%90%AD%E5%BB%BAGitHub%E5%8D%9A%E5%AE%A2%E2%80%94%E6%89%93%E9%80%A0%E7%82%AB%E9%85%B7%E7%9A%84NexT%E4%B8%BB%E9%A2%98%E2%80%94%E9%AB%98%E7%BA%A7%E2%80%94%E5%9B%9B/">Hexo搭建GitHub博客—打造炫酷的NexT主题–高级(四)</a></li>
<li><a href="http://www.missfli.com/2018/06/19/github-hexo-next-08.html">Hexo NexT主题代码块添加复制功能</a></li>
<li><a href="https://ihaoming.top/archives/9a935f57.html">修改hexo博客next主题文章页面宽度</a></li>
<li><a href="https://hexo.io/zh-cn/docs/asset-folders.html">在Hexo中使用资源文件夹添加图片</a></li>
</ul>
]]></content>
      <categories>
        <category>教程</category>
        <category>博客</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title>前端vscode插件配置</title>
    <url>/posts/11039/</url>
    <content><![CDATA[<h3 id="外观配置"><a href="#外观配置" class="headerlink" title="外观配置"></a>外观配置</h3><ul>
<li><strong>主题</strong>：<a href="https://marketplace.visualstudio.com/items?itemName=chriseckenrode.vscode-chester-atom">Chester Atom</a></li>
<li><strong>图标</strong>：<a href="https://marketplace.visualstudio.com/items?itemName=emmanuelbeziat.vscode-great-icons">VSCode Great Icons</a></li>
<li><strong>字体</strong>：<a href="https://github.com/tonsky/FiraCode/wiki">Fira Code</a></li>
</ul>
<a id="more"></a>

<h4 id="预览"><a href="#预览" class="headerlink" title="预览"></a>预览</h4><img src="/posts/11039/163001_02d3ddb2_1203301.png" class="" title="UI-Show">


<h4 id="用户设置（User-Settings）"><a href="#用户设置（User-Settings）" class="headerlink" title="用户设置（User Settings）"></a>用户设置（User Settings）</h4><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">&quot;editor.fontSize&quot;</span>: <span class="number">16</span>,</span><br><span class="line">    <span class="attr">&quot;workbench.colorTheme&quot;</span>: <span class="string">&quot;Chester Atom&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;editor.fontFamily&quot;</span>: <span class="string">&quot;Fira Code&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;emmet.triggerExpansionOnTab&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">&quot;editor.fontLigatures&quot;</span>: <span class="literal">true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="风格检查"><a href="#风格检查" class="headerlink" title="风格检查"></a>风格检查</h3><ul>
<li><strong><a href="https://marketplace.visualstudio.com/items?itemName=dbaeumer.vscode-eslint">ESLint</a></strong></li>
<li><strong><a href="https://marketplace.visualstudio.com/items?itemName=shinnn.stylelint">StyleLint</a></strong></li>
<li><strong><a href="https://marketplace.visualstudio.com/items?itemName=DavidAnson.vscode-markdownlint">MarkdownLint</a></strong></li>
<li><strong><a href="https://marketplace.visualstudio.com/items?itemName=esbenp.prettier-vscode">Prettier</a></strong></li>
</ul>
<h3 id="编码效率"><a href="#编码效率" class="headerlink" title="编码效率"></a>编码效率</h3><h4 id="代码片段"><a href="#代码片段" class="headerlink" title="代码片段"></a>代码片段</h4><ul>
<li><a href="https://marketplace.visualstudio.com/items?itemName=abusaidm.html-snippets">HTML Snippets</a></li>
<li><a href="https://marketplace.visualstudio.com/items?itemName=xabikos.JavaScriptSnippets">Javascript (ES6) Code Snippets</a></li>
<li><a href="https://marketplace.visualstudio.com/items?itemName=nikhilkumar80.js-patterns-snippets">Javascript Patterns Snippets</a></li>
<li><a href="https://marketplace.visualstudio.com/items?itemName=joelday.docthis">Document This</a>，一键给代码中的类、函数加上注释，支持函数声明、函数表达式、箭头函数等；</li>
</ul>
<h4 id="自动补全"><a href="#自动补全" class="headerlink" title="自动补全"></a>自动补全</h4><ul>
<li><a href="https://link.juejin.im/?target=https://marketplace.visualstudio.com/items?itemName=formulahendry.auto-close-tag">Auto Close Tag</a>，在打开标签并且键入 <code>&lt;/</code> 的时候，能自动补全要闭合的标签；</li>
<li><a href="https://link.juejin.im/?target=https://marketplace.visualstudio.com/items?itemName=formulahendry.auto-rename-tag">Auto Rename Tag</a>，在修改标签名时，能在你修改开始（结束）标签的时候修改对应的结束（开始）标签。</li>
<li><a href="https://link.juejin.im/?target=https://marketplace.visualstudio.com/items?itemName=christian-kohler.path-intellisense">Path Intellisense</a>，文件路径补全，在你用任何方式引入文件系统中的路径时提供智能提示和自动完成。</li>
<li><a href="https://link.juejin.im/?target=https://marketplace.visualstudio.com/items?itemName=christian-kohler.npm-intellisense">NPM Intellisense</a>，NPM 依赖补全，在你引入任何 node_modules 里面的依赖包时提供智能提示和自动完成。</li>
<li><a href="https://link.juejin.im/?target=https://marketplace.visualstudio.com/items?itemName=Zignd.html-css-class-completion">IntelliSense for CSS class names</a>，CSS 类名补全，会自动扫描整个项目里面的 CSS 类名并在你输入类名时做智能提示。</li>
<li><a href="https://link.juejin.im/?target=https://emmet.io">Emmet</a>，VSCode 已经内置，官方介绍文档<a href="https://link.juejin.im/?target=https://code.visualstudio.com/docs/editor/emmet">参见</a>。</li>
</ul>
<h4 id="代码补全"><a href="#代码补全" class="headerlink" title="代码补全"></a>代码补全</h4><ul>
<li><a href="https://marketplace.visualstudio.com/items?itemName=formulahendry.code-runner">Code Runner</a><!-- [![Code Runner](前端vscode插件配置/162c15a64b468fd8.gif)](https://user-gold-cdn.xitu.io/2018/4/14/162c15a64b468fd8?imageslim) -->
<img src="/posts/11039/162c15a64b468fd8.gif" class="" title="Code-Runner">

</li>
</ul>
<h3 id="功能增强"><a href="#功能增强" class="headerlink" title="功能增强"></a>功能增强</h3><ul>
<li><a href="https://link.juejin.im/?target=https://marketplace.visualstudio.com/items?itemName=naumovs.color-highlight">Color Highlight</a>，识别代码中的颜色，包括各种颜色格式。</li>
<li><a href="https://link.juejin.im/?target=https://marketplace.visualstudio.com/items?itemName=CoenraadS.bracket-pair-colorizer">Bracket Pair Colorizer</a>，识别代码中的各种括号，并且标记上不同的颜色，方便你扫视到匹配的括号。</li>
<li><a href="https://marketplace.visualstudio.com/items?itemName=Shan.code-settings-sync">Settings Sync</a>，基于 Gist 实现 VSCode 用户配置、快捷键配置、已安装插件列表等的备份和恢复功能，配置过程有详细精确的操作步骤文档。生成的备份 Gist 默认是私密的，如果你想设置为共享的，也可以一键切换。</li>
</ul>
<h3 id="外观增强"><a href="#外观增强" class="headerlink" title="外观增强"></a>外观增强</h3><ul>
<li><a href="https://marketplace.visualstudio.com/items?itemName=wayou.vscode-todo-highlight">TODO Highlight</a><br>维护时间稍长的代码仓库免不了会有各种 TODO、FIXME、HACK 之类的标记，TODO Highlight 能够帮我们把这些关键词高亮出来，在你翻阅代码时非常醒目，就像是在大声提醒你尽快把他解决掉。支持自定义配置需要高亮的关键词，实际使用比较坑的地方是，TODO、FIXME 之类的后面必须加上冒号，否则无法高亮。<!-- [![TODO Highlight](前端vscode插件配置/1)](https://user-gold-cdn.xitu.io/2018/4/14/162c1592cecf92d8?imageView2/0/w/1280/h/960/format/webp/ignore-error/1) -->
<img src="/posts/11039/1.png" class="" title="TODO-Highlight"></li>
</ul>
]]></content>
      <categories>
        <category>工具</category>
        <category>IDE</category>
      </categories>
      <tags>
        <tag>VSCode</tag>
      </tags>
  </entry>
  <entry>
    <title>对HTML语义化的理解</title>
    <url>/posts/2906/</url>
    <content><![CDATA[<h2 id="对HTML语义化的理解"><a href="#对HTML语义化的理解" class="headerlink" title="对HTML语义化的理解"></a>对HTML语义化的理解</h2><p>核心：用正确的标签做正确的事情</p>
<ol>
<li>利与开发：方便代码的阅读和维护</li>
<li>利于SEO：方便爬虫根据 语义标签 确定 页面结构 和 关键字 的权重</li>
</ol>
<a id="more"></a>

<h2 id="常见语义化标签"><a href="#常见语义化标签" class="headerlink" title="常见语义化标签"></a>常见语义化标签</h2><p>一图胜千言：</p>
<img src="/posts/2906/f8442d9e-e30d-11e6-85aa-3e3fb75f9695.jpg" class="" title="语义化demo">


<p>元素细节：</p>
<ul>
<li><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/main">main</a> 存放每个页面独有的内容。每个页面上只能用一次 <code>&lt;main&gt;</code>，且直位于 <a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/body">``</a>中。最好不要把它嵌套进其它元素。</li>
<li><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/article">article</a> 包围的内容即一篇文章，与页面其它部分无关（比如一篇博文）。</li>
<li><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/section">section</a> 与 <code>&lt;article&gt;</code> 类似，但 <code>&lt;section&gt;</code> 更适用于组织页面使其按功能（比如迷你地图、一组文章标题和摘要）分块。一般的最佳用法是：以 <a href="https://developer.mozilla.org/en-US/Learn/HTML/Howto/Set_up_a_proper_title_hierarchy">标题</a> 作为开头；也可以把一篇 <code>&lt;article&gt;</code> 分成若干部分并分别置于不同的 <code>&lt;section&gt;</code> 中，也可以把一个区段 <code>&lt;section&gt;</code> 分成若干部分并分别置于不同的 <code>&lt;article&gt;</code> 中，取决于上下文。</li>
<li><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/aside">aside</a> 包含一些间接信息（术语条目、作者简介、相关链接，等等）。</li>
<li><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/header">header</a> 是简介形式的内容。如果它是 <a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/body">body</a> 的子元素，那么就是网站的全局页眉。如果它是 <a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/article">article</a> 或<a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/section">section</a> 的子元素，那么它是这些部分特有的页眉（此 <code>&lt;header&gt;</code> 非彼 <a href="https://developer.mozilla.org/zh-CN/docs/learn/HTML/Introduction_to_HTML/The_head_metadata_in_HTML#%E5%A2%9E%E5%8A%A0%E4%B8%80%E4%B8%AA%E6%A0%87%E9%A2%98">标题</a>）。</li>
<li><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/nav">nav</a> 包含页面主导航功能。其中不应包含二级链接等内容。</li>
<li><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/footer">footer</a> 包含了页面的页脚部分。</li>
</ul>
<p>来源：<a href="https://developer.mozilla.org/zh-CN/docs/learn/HTML/Introduction_to_HTML/%E6%96%87%E4%BB%B6%E5%92%8C%E7%BD%91%E7%AB%99%E7%BB%93%E6%9E%84">文档与网站架构</a></p>
]]></content>
      <categories>
        <category>前端</category>
        <category>HTML</category>
      </categories>
  </entry>
  <entry>
    <title>垂直居中方案汇总</title>
    <url>/posts/12733/</url>
    <content><![CDATA[<p>这里汇总了常见的元素居中方案。</p>
<h2 id="水平居中"><a href="#水平居中" class="headerlink" title="水平居中"></a>水平居中</h2><h3 id="行内元素水平居中"><a href="#行内元素水平居中" class="headerlink" title="行内元素水平居中"></a>行内元素水平居中</h3><p>核心：给父元素添加 <code>text-align: center</code></p>
<iframe height="265" scrolling="no" title="行内元素水平居中" src="https://codepen.io/JingW/embed/mvaNXw/?height=265&amp;theme-id=0&amp;default-tab=css,result" frameborder="no" allowtransparency="true" allowfullscreen="true" style="width: 997.594px;"></iframe>

<a id="more"></a>

<h3 id="块级元素水平居中"><a href="#块级元素水平居中" class="headerlink" title="块级元素水平居中"></a>块级元素水平居中</h3><p>核心：子元素自身 <code>margin: 0 auto;</code></p>
<iframe height="291" scrolling="no" title="块元素水平居中" src="https://codepen.io/JingW/embed/moxbxb/?height=291&amp;theme-id=0&amp;default-tab=css,result" frameborder="no" allowtransparency="true" allowfullscreen="true" style="width: 997.594px;"></iframe>

<h3 id="多个div水平居中"><a href="#多个div水平居中" class="headerlink" title="多个div水平居中"></a>多个div水平居中</h3><h4 id="传统方案"><a href="#传统方案" class="headerlink" title="传统方案"></a>传统方案</h4><p>核心：父元素设置 <code>text-align: center</code> ，子元素设置 <code>inline-block</code></p>
<iframe height="265" scrolling="no" title="多个div水平居中 - 传统方案" src="https://codepen.io/JingW/embed/KEoPGq/?height=265&amp;theme-id=0&amp;default-tab=css,result" frameborder="no" allowtransparency="true" allowfullscreen="true" style="width: 997.594px;"></iframe>

<h4 id="Flex方案"><a href="#Flex方案" class="headerlink" title="Flex方案"></a>Flex方案</h4><p>核心：父元素 <code>display: flex</code> + <code>justify-content: center</code> + <code>align-items: center</code></p>
<iframe height="265" scrolling="no" title="多个div水平居中-flex" src="https://codepen.io/JingW/embed/XGEroY/?height=265&amp;theme-id=0&amp;default-tab=css,result" frameborder="no" allowtransparency="true" allowfullscreen="true" style="width: 997.594px;"></iframe>

<h2 id="水平垂直居中"><a href="#水平垂直居中" class="headerlink" title="水平垂直居中"></a>水平垂直居中</h2><h3 id="table自带水平垂直居中"><a href="#table自带水平垂直居中" class="headerlink" title="table自带水平垂直居中"></a>table自带水平垂直居中</h3><p>核心：使用 <code>table&gt;tr&gt;td</code> 布局</p>
<iframe height="460" scrolling="no" title="div水平垂直居中 - table" src="https://codepen.io/JingW/embed/xBWxwe/?height=265&amp;theme-id=0&amp;default-tab=css,result" frameborder="no" allowtransparency="true" allowfullscreen="true" style="width: 997.594px;"></iframe>

<h3 id="模拟table"><a href="#模拟table" class="headerlink" title="模拟table"></a>模拟table</h3><p>核心：父元素 <code>display: table</code> ，子元素 <code>display: table-cell</code> + <code>vertical-align: middle</code></p>
<iframe height="460" scrolling="no" title="div水平垂直居中 - 模拟table" src="https://codepen.io/JingW/embed/aMYbZx/?height=265&amp;theme-id=0&amp;default-tab=css,result" frameborder="no" allowtransparency="true" allowfullscreen="true" style="width: 997.594px;"></iframe>

<h3 id="子绝父相-子元素-margin-auto"><a href="#子绝父相-子元素-margin-auto" class="headerlink" title="子绝父相 + 子元素 margin:auto"></a>子绝父相 + 子元素 margin:auto</h3><p>核心：子元素相对于父元素绝对定位，<code>top</code>、<code>right</code>、<code>bottom</code>、<code>left</code> 都设为0，margi设为auto</p>
<iframe height="460" scrolling="no" title="div水平垂直居中 - 子绝父相 + Margin Auto" src="https://codepen.io/JingW/embed/PLRYrz/?height=460&amp;theme-id=0&amp;default-tab=css,result" frameborder="no" allowtransparency="true" allowfullscreen="true" style="width: 997.594px;"></iframe>

<h3 id="子绝父相-负margin"><a href="#子绝父相-负margin" class="headerlink" title="子绝父相 + 负margin"></a>子绝父相 + 负margin</h3><p>核心：子元素相对于父元素绝对定位，<code>top</code>、<code>left</code>设为50%，margin相对自身宽/高一半</p>
<iframe height="460" scrolling="no" title="div水平垂直居中 - 子绝父相 + 负Margin" src="https://codepen.io/JingW/embed/oVqNvK/?height=460&amp;theme-id=0&amp;default-tab=css,result" frameborder="no" allowtransparency="true" allowfullscreen="true" style="width: 997.594px;"></iframe>

<h3 id="子绝父相-translate"><a href="#子绝父相-translate" class="headerlink" title="子绝父相 + translate"></a>子绝父相 + translate</h3><p>核心：子元素相对于父元素绝对定位，<code>top</code>、<code>left</code>设为50%，此时子元素左上角在父元素中心，然后让子元素向左上角位移自身宽度的一半</p>
<iframe height="460" scrolling="no" title="div水平垂直居中 - 子绝父相 + translate" src="https://codepen.io/JingW/embed/EMExjr/?height=456&amp;theme-id=0&amp;default-tab=css,result" frameborder="no" allowtransparency="true" allowfullscreen="true" style="width: 997.594px;"></iframe>

<h3 id="Flex布局"><a href="#Flex布局" class="headerlink" title="Flex布局"></a>Flex布局</h3><p>父元素 <code>display: flex</code>，<code>justify-content</code> 和 <code>align-items</code> 都设为 center 实现垂直居中</p>
<iframe height="460" scrolling="no" title="div水平垂直居中 - flex" src="https://codepen.io/JingW/embed/rRdNyo/?height=265&amp;theme-id=0&amp;default-tab=css,result" frameborder="no" allowtransparency="true" allowfullscreen="true" style="width: 997.594px;"></iframe>
]]></content>
      <categories>
        <category>前端</category>
        <category>CSS</category>
      </categories>
      <tags>
        <tag>布局</tag>
        <tag>技巧</tag>
      </tags>
  </entry>
</search>
